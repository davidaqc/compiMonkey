
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftORANDAND ARROW_LTR BANANA BANANAS BEAVER BEAVERS COMMA CROCODILE CROCODILES DISTANCETO ELSE EQ EQUALS FALSE FOR GT HEALTH IDENTIFIER IF IN LEFT LPAREN LSQBRACK LT MATCH MATCHES MINUS MUL NEAR NEWLINE NOT NUM_INT OR PLUS POINT RETURN RIGHT RPAREN RSQBRACK SAY SEE SLEEPING STEP TIMES TRUE TURN TURNTO TURTLE TURTLES UNTIL WS\n    statement_list : statement\n                   | statement_list statement\n    \n    statement : identifier\n              | expression\n              | if_statement\n              | turn\n              | step\n    \n    turn : TURN LEFT\n        | TURN RIGHT\n        | TURN NUM_INT\n        | expression POINT TURNTO expression\n        | TURNTO BANANA LSQBRACK NUM_INT RSQBRACK\n        | TURNTO BANANA LSQBRACK expression RSQBRACK\n        | TURNTO MATCH LSQBRACK NUM_INT RSQBRACK\n        | TURNTO MATCH LSQBRACK expression RSQBRACK\n        | TURNTO expression\n    \n    step :  STEP expression\n        | STEP MINUS expression\n        | STEP DISTANCETO expression\n        | expression POINT STEP expression\n        | BEAVER LSQBRACK NUM_INT RSQBRACK POINT STEP expression\n        | TURTLE LSQBRACK NUM_INT RSQBRACK POINT STEP expression\n        | STEP DISTANCETO BANANA LSQBRACK NUM_INT RSQBRACK\n        | STEP DISTANCETO BANANA LSQBRACK expression RSQBRACK\n        | STEP DISTANCETO MATCH LSQBRACK NUM_INT RSQBRACK\n        | STEP DISTANCETO MATCH LSQBRACK expression RSQBRACK\n    \n    identifier : IDENTIFIER\n    \n    primitive : NUM_INT\n              | boolean\n    \n    expression : expression PLUS expression %prec PLUS\n               | expression MINUS expression %prec MINUS\n    \n    boolean : boolean AND boolean\n            | boolean OR boolean\n            | expression EQ expression\n            | expression GT expression\n            | expression LT expression\n    \n    expression : NOT expression\n    \n    boolean : TRUE\n            | FALSE\n    \n    assignable : primitive\n               | expression\n    \n    arguments : arguments COMMA expression\n              | expression\n              |\n    \n    expression : LSQBRACK arguments RSQBRACK\n    \n    expression : identifier LSQBRACK expression RSQBRACK\n    \n    statement : identifier LSQBRACK expression RSQBRACK EQUALS expression\n    \n    expression : identifier EQUALS assignable\n    \n    if_statement : IF expression statement_list COMMA\n    \n    if_statement : IF expression statement_list ELSE statement_list COMMA\n    \n    statement : SAY LPAREN RPAREN\n              | SEE LPAREN RPAREN\n              | HEALTH LPAREN RPAREN\n    \n    expression : primitive\n               | identifier\n    \n    statement : expression POINT TIMES ARROW_LTR statement_list COMMA\n    \n    statement : FOR identifier IN BANANAS statement_list COMMA\n              | FOR identifier IN TURTLES statement_list COMMA\n              | FOR identifier IN CROCODILES statement_list COMMA\n              | FOR identifier IN MATCHES statement_list COMMA\n    \n    statement : UNTIL expression statement_list COMMA\n              | UNTIL NEAR MATCH statement_list COMMA\n    \n    statement : identifier EQUALS LPAREN arguments RPAREN ARROW_LTR statement_list COMMA\n    \n    statement : RETURN expression\n    \n    expression : identifier LPAREN arguments RPAREN\n    statement : identifier arguments COMMA\n\n    '
    
_lr_action_items = {'SAY':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[9,9,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,9,-64,-37,9,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,9,9,9,-18,-19,-32,-33,-46,-65,9,-11,-20,9,9,9,9,-61,9,-49,9,-46,9,9,9,9,9,-62,9,-12,-13,-14,-15,-47,9,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,9,-21,-22,-63,]),'SEE':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[10,10,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,10,-64,-37,10,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,10,10,10,-18,-19,-32,-33,-46,-65,10,-11,-20,10,10,10,10,-61,10,-49,10,-46,10,10,10,10,10,-62,10,-12,-13,-14,-15,-47,10,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,10,-21,-22,-63,]),'HEALTH':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[11,11,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,11,-64,-37,11,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,11,11,11,-18,-19,-32,-33,-46,-65,11,-11,-20,11,11,11,11,-61,11,-49,11,-46,11,11,11,11,11,-62,11,-12,-13,-14,-15,-47,11,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,11,-21,-22,-63,]),'FOR':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[12,12,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,12,-64,-37,12,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,12,12,12,-18,-19,-32,-33,-46,-65,12,-11,-20,12,12,12,12,-61,12,-49,12,-46,12,12,12,12,12,-62,12,-12,-13,-14,-15,-47,12,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,12,-21,-22,-63,]),'UNTIL':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[13,13,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,13,-64,-37,13,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,13,13,13,-18,-19,-32,-33,-46,-65,13,-11,-20,13,13,13,13,-61,13,-49,13,-46,13,13,13,13,13,-62,13,-12,-13,-14,-15,-47,13,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,13,-21,-22,-63,]),'RETURN':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[14,14,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,14,-64,-37,14,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,14,14,14,-18,-19,-32,-33,-46,-65,14,-11,-20,14,14,14,14,-61,14,-49,14,-46,14,14,14,14,14,-62,14,-12,-13,-14,-15,-47,14,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,14,-21,-22,-63,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,12,13,14,15,16,17,18,20,21,22,25,26,27,28,29,30,32,33,36,37,38,39,40,46,48,49,50,51,52,53,55,57,58,59,62,63,64,65,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,121,122,125,126,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,],[15,15,-1,15,-4,-5,-6,-7,15,15,15,15,-27,15,-54,15,-28,15,15,-29,-38,-39,-2,-55,15,15,15,15,15,15,15,15,15,-64,-37,15,-8,-9,-10,-16,-17,15,15,15,15,15,15,15,-48,-40,-41,15,15,15,-30,-31,-34,-35,-36,-45,15,-51,-52,-53,15,15,15,15,15,-18,-19,-32,-33,-46,-65,15,-11,-20,15,15,15,15,-61,15,-49,15,15,15,-46,15,15,15,15,15,15,-62,15,-12,-13,-14,-15,-47,15,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,15,15,15,-21,-22,-63,]),'NOT':([0,1,2,3,4,5,6,7,8,13,14,15,16,17,18,20,21,22,25,26,27,28,29,30,32,33,36,37,38,39,40,46,48,49,50,51,52,53,55,57,58,59,62,63,64,65,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,121,122,125,126,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,],[16,16,-1,16,-4,-5,-6,-7,16,16,16,-27,16,-54,16,-28,16,16,-29,-38,-39,-2,-55,16,16,16,16,16,16,16,16,16,-64,-37,16,-8,-9,-10,-16,-17,16,16,16,16,16,16,16,-48,-40,-41,16,16,16,-30,-31,-34,-35,-36,-45,16,-51,-52,-53,16,16,16,16,16,-18,-19,-32,-33,-46,-65,16,-11,-20,16,16,16,16,-61,16,-49,16,16,16,-46,16,16,16,16,16,16,-62,16,-12,-13,-14,-15,-47,16,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,16,16,16,-21,-22,-63,]),'LSQBRACK':([0,1,2,3,4,5,6,7,8,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,121,122,125,126,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,],[8,8,-1,30,-4,-5,-6,-7,8,8,8,-27,8,-54,8,-28,8,8,60,61,-29,-38,-39,-2,64,8,8,8,8,8,8,8,8,8,-64,-37,8,-8,-9,-10,90,-16,91,-17,8,8,8,8,8,8,8,-48,-40,-41,8,8,8,-30,-31,-34,-35,-36,-45,8,-51,-52,-53,8,8,8,8,8,-18,-19,121,122,-32,-33,-46,-65,8,-11,-20,8,8,8,8,-61,8,-49,8,8,8,-46,8,8,8,8,8,8,-62,8,-12,-13,-14,-15,-47,8,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,8,8,8,-21,-22,-63,]),'IF':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[18,18,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,18,-64,-37,18,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,18,18,18,-18,-19,-32,-33,-46,-65,18,-11,-20,18,18,18,18,-61,18,-49,18,-46,18,18,18,18,18,-62,18,-12,-13,-14,-15,-47,18,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,18,-21,-22,-63,]),'TURN':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[19,19,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,19,-64,-37,19,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,19,19,19,-18,-19,-32,-33,-46,-65,19,-11,-20,19,19,19,19,-61,19,-49,19,-46,19,19,19,19,19,-62,19,-12,-13,-14,-15,-47,19,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,19,-21,-22,-63,]),'TURNTO':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,35,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[21,21,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,74,21,-64,-37,21,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,21,21,21,-18,-19,-32,-33,-46,-65,21,-11,-20,21,21,21,21,-61,21,-49,21,-46,21,21,21,21,21,-62,21,-12,-13,-14,-15,-47,21,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,21,-21,-22,-63,]),'STEP':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,35,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[22,22,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,75,22,-64,-37,22,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,22,22,22,-18,-19,-32,-33,-46,-65,22,-11,-20,22,22,22,22,-61,22,-49,22,-46,22,22,22,22,22,-62,22,-12,-13,-14,-15,157,158,-47,22,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,22,-21,-22,-63,]),'BEAVER':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[23,23,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,23,-64,-37,23,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,23,23,23,-18,-19,-32,-33,-46,-65,23,-11,-20,23,23,23,23,-61,23,-49,23,-46,23,23,23,23,23,-62,23,-12,-13,-14,-15,-47,23,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,23,-21,-22,-63,]),'TURTLE':([0,1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,46,48,49,50,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,87,88,89,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,125,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[24,24,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,24,-64,-37,24,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,24,24,24,-18,-19,-32,-33,-46,-65,24,-11,-20,24,24,24,24,-61,24,-49,24,-46,24,24,24,24,24,-62,24,-12,-13,-14,-15,-47,24,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,24,-21,-22,-63,]),'NUM_INT':([0,1,2,3,4,5,6,7,8,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,30,32,33,36,37,38,39,40,46,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,121,122,125,126,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,],[20,20,-1,20,-4,-5,-6,-7,20,20,20,-27,20,-54,20,53,-28,20,20,-29,-38,-39,-2,-55,20,20,20,20,20,20,20,20,20,-64,-37,20,-8,-9,-10,-16,-17,20,20,96,97,20,20,20,20,20,-48,-40,-41,20,20,20,-30,-31,-34,-35,-36,-45,20,-51,-52,-53,20,20,20,117,119,-18,-19,-32,-33,-46,-65,20,-11,-20,20,20,20,20,-61,20,-49,20,139,141,-46,20,20,20,20,20,20,-62,20,-12,-13,-14,-15,-47,20,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,20,20,20,-21,-22,-63,]),'TRUE':([0,1,2,3,4,5,6,7,8,13,14,15,16,17,18,20,21,22,25,26,27,28,29,30,32,33,36,37,38,39,40,46,48,49,50,51,52,53,55,57,58,59,62,63,64,65,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,121,122,125,126,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,],[26,26,-1,26,-4,-5,-6,-7,26,26,26,-27,26,-54,26,-28,26,26,-29,-38,-39,-2,-55,26,26,26,26,26,26,26,26,26,-64,-37,26,-8,-9,-10,-16,-17,26,26,26,26,26,26,26,-48,-40,-41,26,26,26,-30,-31,-34,-35,-36,-45,26,-51,-52,-53,26,26,26,26,26,-18,-19,-32,-33,-46,-65,26,-11,-20,26,26,26,26,-61,26,-49,26,26,26,-46,26,26,26,26,26,26,-62,26,-12,-13,-14,-15,-47,26,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,26,26,26,-21,-22,-63,]),'FALSE':([0,1,2,3,4,5,6,7,8,13,14,15,16,17,18,20,21,22,25,26,27,28,29,30,32,33,36,37,38,39,40,46,48,49,50,51,52,53,55,57,58,59,62,63,64,65,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,98,100,102,104,106,107,108,109,110,111,112,113,114,115,116,121,122,125,126,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,],[27,27,-1,27,-4,-5,-6,-7,27,27,27,-27,27,-54,27,-28,27,27,-29,-38,-39,-2,-55,27,27,27,27,27,27,27,27,27,-64,-37,27,-8,-9,-10,-16,-17,27,27,27,27,27,27,27,-48,-40,-41,27,27,27,-30,-31,-34,-35,-36,-45,27,-51,-52,-53,27,27,27,27,27,-18,-19,-32,-33,-46,-65,27,-11,-20,27,27,27,27,-61,27,-49,27,27,27,-46,27,27,27,27,27,27,-62,27,-12,-13,-14,-15,-47,27,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,27,27,27,-21,-22,-63,]),'$end':([1,2,3,4,5,6,7,15,17,20,25,26,27,28,29,48,49,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,92,93,98,100,102,104,107,108,113,115,125,133,135,136,137,138,145,147,148,149,150,151,152,153,154,155,156,160,161,162,],[0,-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,-64,-37,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,-18,-19,-32,-33,-46,-65,-11,-20,-61,-49,-46,-62,-12,-13,-14,-15,-47,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,-21,-22,-63,]),'COMMA':([2,3,4,5,6,7,8,15,17,20,25,26,27,28,29,30,31,33,34,41,48,49,51,52,53,55,57,66,67,68,69,70,71,72,76,77,78,79,80,81,83,84,85,87,89,92,93,98,100,102,103,104,105,107,108,113,114,115,125,128,129,130,131,132,133,134,135,136,137,138,145,147,148,149,150,151,152,153,154,155,156,159,160,161,162,],[-1,-3,-4,-5,-6,-7,-44,-27,-54,-28,-29,-38,-39,-2,-55,-44,-43,-44,72,82,-64,-37,-8,-9,-10,-16,-17,-43,-44,-48,-40,-41,82,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,113,115,-18,-19,-32,-33,-46,82,-65,-42,-11,-20,-61,133,-49,-46,147,148,149,150,151,-62,152,-12,-13,-14,-15,-47,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,162,-21,-22,-63,]),'ELSE':([2,3,4,5,6,7,15,17,20,25,26,27,28,29,48,49,51,52,53,55,57,68,69,70,72,76,77,78,79,80,81,83,84,85,89,92,93,98,100,102,104,107,108,113,115,125,133,135,136,137,138,145,147,148,149,150,151,152,153,154,155,156,160,161,162,],[-1,-3,-4,-5,-6,-7,-27,-54,-28,-29,-38,-39,-2,-55,-64,-37,-8,-9,-10,-16,-17,-48,-40,-41,-66,-30,-31,-34,-35,-36,-45,-51,-52,-53,116,-18,-19,-32,-33,-46,-65,-11,-20,-61,-49,-46,-62,-12,-13,-14,-15,-47,-56,-57,-58,-59,-60,-50,-23,-24,-25,-26,-21,-22,-63,]),'EQUALS':([3,15,29,102,],[32,-27,65,126,]),'POINT':([3,4,15,17,20,25,26,27,29,49,68,69,70,76,77,78,79,80,81,98,100,102,104,123,124,125,],[-55,35,-27,-54,-28,-29,-38,-39,-55,-37,-48,-40,-41,-30,-31,-34,-35,-36,-45,-32,-33,-46,-65,143,144,-46,]),'PLUS':([3,4,15,17,20,25,26,27,29,31,46,48,49,50,55,57,66,68,69,70,76,77,78,79,80,81,92,93,98,99,100,101,102,104,105,107,108,117,118,119,120,125,139,140,141,142,145,160,161,],[-55,36,-27,-54,-28,-29,-38,-39,-55,36,36,36,36,36,36,36,36,-48,-40,36,-30,-31,36,36,36,-45,36,36,-29,36,-29,36,-46,-65,36,36,36,-28,36,-28,36,-46,-28,36,-28,36,36,36,36,]),'MINUS':([3,4,15,17,20,22,25,26,27,29,31,46,48,49,50,55,57,66,68,69,70,76,77,78,79,80,81,92,93,98,99,100,101,102,104,105,107,108,117,118,119,120,125,139,140,141,142,145,160,161,],[-55,37,-27,-54,-28,58,-29,-38,-39,-55,37,37,37,37,37,37,37,37,-48,-40,37,-30,-31,37,37,37,-45,37,37,-29,37,-29,37,-46,-65,37,37,37,-28,37,-28,37,-46,-28,37,-28,37,37,37,37,]),'EQ':([3,4,15,17,20,25,26,27,29,31,46,48,49,50,55,57,66,68,69,70,76,77,78,79,80,81,92,93,98,99,100,101,102,104,105,107,108,117,118,119,120,125,139,140,141,142,145,160,161,],[-55,38,-27,-54,-28,-29,-38,-39,-55,38,38,38,38,38,38,38,38,-48,-40,38,-30,-31,38,38,38,-45,38,38,-29,38,-29,38,-46,-65,38,38,38,-28,38,-28,38,-46,-28,38,-28,38,38,38,38,]),'GT':([3,4,15,17,20,25,26,27,29,31,46,48,49,50,55,57,66,68,69,70,76,77,78,79,80,81,92,93,98,99,100,101,102,104,105,107,108,117,118,119,120,125,139,140,141,142,145,160,161,],[-55,39,-27,-54,-28,-29,-38,-39,-55,39,39,39,39,39,39,39,39,-48,-40,39,-30,-31,39,39,39,-45,39,39,-29,39,-29,39,-46,-65,39,39,39,-28,39,-28,39,-46,-28,39,-28,39,39,39,39,]),'LT':([3,4,15,17,20,25,26,27,29,31,46,48,49,50,55,57,66,68,69,70,76,77,78,79,80,81,92,93,98,99,100,101,102,104,105,107,108,117,118,119,120,125,139,140,141,142,145,160,161,],[-55,40,-27,-54,-28,-29,-38,-39,-55,40,40,40,40,40,40,40,40,-48,-40,40,-30,-31,40,40,40,-45,40,40,-29,40,-29,40,-46,-65,40,40,40,-28,40,-28,40,-46,-28,40,-28,40,40,40,40,]),'LPAREN':([3,9,10,11,15,29,32,],[33,42,43,44,-27,33,67,]),'RSQBRACK':([8,15,17,20,25,26,27,29,30,31,41,49,66,68,69,70,76,77,78,79,80,81,96,97,98,100,101,104,105,117,118,119,120,125,139,140,141,142,],[-44,-27,-54,-28,-29,-38,-39,-55,-44,-43,81,-37,102,-48,-40,-41,-30,-31,-34,-35,-36,-45,123,124,-32,-33,125,-65,-42,135,136,137,138,-46,153,154,155,156,]),'NEAR':([13,],[47,]),'IN':([15,45,],[-27,86,]),'RPAREN':([15,17,20,25,26,27,29,31,33,42,43,44,49,67,68,69,70,71,76,77,78,79,80,81,98,100,103,104,105,125,],[-27,-54,-28,-29,-38,-39,-55,-43,-44,83,84,85,-37,-44,-48,-40,-41,104,-30,-31,-34,-35,-36,-45,-32,-33,127,-65,-42,-46,]),'AND':([15,17,20,25,26,27,29,49,68,69,70,76,77,78,79,80,81,98,100,104,125,],[-27,-54,-28,62,-38,-39,-55,-37,-48,-40,-41,-30,-31,-34,-35,-36,-45,-32,-33,-65,-46,]),'OR':([15,17,20,25,26,27,29,49,68,69,70,76,77,78,79,80,81,98,100,104,125,],[-27,-54,-28,63,-38,-39,-55,-37,-48,-40,-41,-30,-31,-34,-35,-36,-45,-32,-33,-65,-46,]),'LEFT':([19,],[51,]),'RIGHT':([19,],[52,]),'BANANA':([21,59,],[54,94,]),'MATCH':([21,47,59,],[56,88,95,]),'DISTANCETO':([22,],[59,]),'TIMES':([35,],[73,]),'ARROW_LTR':([73,127,],[106,146,]),'BANANAS':([86,],[109,]),'TURTLES':([86,],[110,]),'CROCODILES':([86,],[111,]),'MATCHES':([86,],[112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,46,50,88,106,109,110,111,112,116,146,],[1,87,89,114,128,129,130,131,132,134,159,]),'statement':([0,1,46,50,87,88,89,106,109,110,111,112,114,116,128,129,130,131,132,134,146,159,],[2,28,2,2,28,2,28,2,2,2,2,2,28,2,28,28,28,28,28,28,2,28,]),'identifier':([0,1,3,8,12,13,14,16,18,21,22,30,32,33,36,37,38,39,40,46,50,58,59,62,63,64,65,67,72,74,75,82,87,88,89,90,91,106,109,110,111,112,114,116,121,122,126,128,129,130,131,132,134,146,157,158,159,],[3,3,29,29,45,29,29,29,29,29,29,29,29,29,29,29,29,29,29,3,3,29,29,29,29,29,29,29,29,29,29,29,3,3,3,29,29,3,3,3,3,3,3,3,29,29,29,3,3,3,3,3,3,3,29,29,3,]),'expression':([0,1,3,8,13,14,16,18,21,22,30,32,33,36,37,38,39,40,46,50,58,59,62,63,64,65,67,72,74,75,82,87,88,89,90,91,106,109,110,111,112,114,116,121,122,126,128,129,130,131,132,134,146,157,158,159,],[4,4,31,31,46,48,49,50,55,57,66,70,31,76,77,78,79,80,4,4,92,93,99,99,101,70,31,105,107,108,105,4,4,4,118,120,4,4,4,4,4,4,4,140,142,145,4,4,4,4,4,4,4,160,161,4,]),'if_statement':([0,1,46,50,87,88,89,106,109,110,111,112,114,116,128,129,130,131,132,134,146,159,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'turn':([0,1,46,50,87,88,89,106,109,110,111,112,114,116,128,129,130,131,132,134,146,159,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'step':([0,1,46,50,87,88,89,106,109,110,111,112,114,116,128,129,130,131,132,134,146,159,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'primitive':([0,1,3,8,13,14,16,18,21,22,30,32,33,36,37,38,39,40,46,50,58,59,62,63,64,65,67,72,74,75,82,87,88,89,90,91,106,109,110,111,112,114,116,121,122,126,128,129,130,131,132,134,146,157,158,159,],[17,17,17,17,17,17,17,17,17,17,17,69,17,17,17,17,17,17,17,17,17,17,17,17,17,69,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'boolean':([0,1,3,8,13,14,16,18,21,22,30,32,33,36,37,38,39,40,46,50,58,59,62,63,64,65,67,72,74,75,82,87,88,89,90,91,106,109,110,111,112,114,116,121,122,126,128,129,130,131,132,134,146,157,158,159,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,98,100,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'arguments':([3,8,30,33,67,],[34,41,41,71,103,]),'assignable':([32,65,],[68,68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement','statement_list',1,'p_statement_list','syntacticAnalysis.py',14),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','syntacticAnalysis.py',15),
  ('statement -> identifier','statement',1,'p_statement','syntacticAnalysis.py',25),
  ('statement -> expression','statement',1,'p_statement','syntacticAnalysis.py',26),
  ('statement -> if_statement','statement',1,'p_statement','syntacticAnalysis.py',27),
  ('statement -> turn','statement',1,'p_statement','syntacticAnalysis.py',28),
  ('statement -> step','statement',1,'p_statement','syntacticAnalysis.py',29),
  ('turn -> TURN LEFT','turn',2,'p_turn','syntacticAnalysis.py',35),
  ('turn -> TURN RIGHT','turn',2,'p_turn','syntacticAnalysis.py',36),
  ('turn -> TURN NUM_INT','turn',2,'p_turn','syntacticAnalysis.py',37),
  ('turn -> expression POINT TURNTO expression','turn',4,'p_turn','syntacticAnalysis.py',38),
  ('turn -> TURNTO BANANA LSQBRACK NUM_INT RSQBRACK','turn',5,'p_turn','syntacticAnalysis.py',39),
  ('turn -> TURNTO BANANA LSQBRACK expression RSQBRACK','turn',5,'p_turn','syntacticAnalysis.py',40),
  ('turn -> TURNTO MATCH LSQBRACK NUM_INT RSQBRACK','turn',5,'p_turn','syntacticAnalysis.py',41),
  ('turn -> TURNTO MATCH LSQBRACK expression RSQBRACK','turn',5,'p_turn','syntacticAnalysis.py',42),
  ('turn -> TURNTO expression','turn',2,'p_turn','syntacticAnalysis.py',43),
  ('step -> STEP expression','step',2,'p_step','syntacticAnalysis.py',54),
  ('step -> STEP MINUS expression','step',3,'p_step','syntacticAnalysis.py',55),
  ('step -> STEP DISTANCETO expression','step',3,'p_step','syntacticAnalysis.py',56),
  ('step -> expression POINT STEP expression','step',4,'p_step','syntacticAnalysis.py',57),
  ('step -> BEAVER LSQBRACK NUM_INT RSQBRACK POINT STEP expression','step',7,'p_step','syntacticAnalysis.py',58),
  ('step -> TURTLE LSQBRACK NUM_INT RSQBRACK POINT STEP expression','step',7,'p_step','syntacticAnalysis.py',59),
  ('step -> STEP DISTANCETO BANANA LSQBRACK NUM_INT RSQBRACK','step',6,'p_step','syntacticAnalysis.py',60),
  ('step -> STEP DISTANCETO BANANA LSQBRACK expression RSQBRACK','step',6,'p_step','syntacticAnalysis.py',61),
  ('step -> STEP DISTANCETO MATCH LSQBRACK NUM_INT RSQBRACK','step',6,'p_step','syntacticAnalysis.py',62),
  ('step -> STEP DISTANCETO MATCH LSQBRACK expression RSQBRACK','step',6,'p_step','syntacticAnalysis.py',63),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','syntacticAnalysis.py',83),
  ('primitive -> NUM_INT','primitive',1,'p_primitive','syntacticAnalysis.py',89),
  ('primitive -> boolean','primitive',1,'p_primitive','syntacticAnalysis.py',90),
  ('expression -> expression PLUS expression','expression',3,'p_binary_op','syntacticAnalysis.py',99),
  ('expression -> expression MINUS expression','expression',3,'p_binary_op','syntacticAnalysis.py',100),
  ('boolean -> boolean AND boolean','boolean',3,'p_boolean_operators','syntacticAnalysis.py',106),
  ('boolean -> boolean OR boolean','boolean',3,'p_boolean_operators','syntacticAnalysis.py',107),
  ('boolean -> expression EQ expression','boolean',3,'p_boolean_operators','syntacticAnalysis.py',108),
  ('boolean -> expression GT expression','boolean',3,'p_boolean_operators','syntacticAnalysis.py',109),
  ('boolean -> expression LT expression','boolean',3,'p_boolean_operators','syntacticAnalysis.py',110),
  ('expression -> NOT expression','expression',2,'p_unary_operation','syntacticAnalysis.py',116),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntacticAnalysis.py',122),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntacticAnalysis.py',123),
  ('assignable -> primitive','assignable',1,'p_assignable','syntacticAnalysis.py',129),
  ('assignable -> expression','assignable',1,'p_assignable','syntacticAnalysis.py',130),
  ('arguments -> arguments COMMA expression','arguments',3,'p_comma_separated_expr','syntacticAnalysis.py',136),
  ('arguments -> expression','arguments',1,'p_comma_separated_expr','syntacticAnalysis.py',137),
  ('arguments -> <empty>','arguments',0,'p_comma_separated_expr','syntacticAnalysis.py',138),
  ('expression -> LSQBRACK arguments RSQBRACK','expression',3,'p_arrays','syntacticAnalysis.py',150),
  ('expression -> identifier LSQBRACK expression RSQBRACK','expression',4,'p_array_access','syntacticAnalysis.py',156),
  ('statement -> identifier LSQBRACK expression RSQBRACK EQUALS expression','statement',6,'p_array_access_assign','syntacticAnalysis.py',162),
  ('expression -> identifier EQUALS assignable','expression',3,'p_assign','syntacticAnalysis.py',168),
  ('if_statement -> IF expression statement_list COMMA','if_statement',4,'p_ifstatement','syntacticAnalysis.py',174),
  ('if_statement -> IF expression statement_list ELSE statement_list COMMA','if_statement',6,'p_ifstatement_else','syntacticAnalysis.py',180),
  ('statement -> SAY LPAREN RPAREN','statement',3,'p_print_statement','syntacticAnalysis.py',186),
  ('statement -> SEE LPAREN RPAREN','statement',3,'p_print_statement','syntacticAnalysis.py',187),
  ('statement -> HEALTH LPAREN RPAREN','statement',3,'p_print_statement','syntacticAnalysis.py',188),
  ('expression -> primitive','expression',1,'p_expression','syntacticAnalysis.py',194),
  ('expression -> identifier','expression',1,'p_expression','syntacticAnalysis.py',195),
  ('statement -> expression POINT TIMES ARROW_LTR statement_list COMMA','statement',6,'p_times','syntacticAnalysis.py',201),
  ('statement -> FOR identifier IN BANANAS statement_list COMMA','statement',6,'p_for_in_loop','syntacticAnalysis.py',208),
  ('statement -> FOR identifier IN TURTLES statement_list COMMA','statement',6,'p_for_in_loop','syntacticAnalysis.py',209),
  ('statement -> FOR identifier IN CROCODILES statement_list COMMA','statement',6,'p_for_in_loop','syntacticAnalysis.py',210),
  ('statement -> FOR identifier IN MATCHES statement_list COMMA','statement',6,'p_for_in_loop','syntacticAnalysis.py',211),
  ('statement -> UNTIL expression statement_list COMMA','statement',4,'p_until_loop','syntacticAnalysis.py',217),
  ('statement -> UNTIL NEAR MATCH statement_list COMMA','statement',5,'p_until_loop','syntacticAnalysis.py',218),
  ('statement -> identifier EQUALS LPAREN arguments RPAREN ARROW_LTR statement_list COMMA','statement',8,'p_function_declaration','syntacticAnalysis.py',227),
  ('statement -> RETURN expression','statement',2,'p_return','syntacticAnalysis.py',235),
  ('expression -> identifier LPAREN arguments RPAREN','expression',4,'p_function_call','syntacticAnalysis.py',241),
  ('statement -> identifier arguments COMMA','statement',3,'p_function_call','syntacticAnalysis.py',242),
]
